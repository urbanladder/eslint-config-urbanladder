module.exports = {
  env: {
    browser: true,
    es6: true,
  },
  extends: ['airbnb'],
  plugins: ['compat', 'unicorn'],
  rules: {
    'class-methods-use-this': ['off'],
    'compat/compat': ['error'],
    'func-names': ['error', 'as-needed'],
    'max-len': [
      'error',
      {
        code: 80,
        comments: 65,
        ignoreStrings: true,
        ignoreTrailingComments: true,
        ignoreUrls: true,
      },
    ],
    'newline-per-chained-call': ['error', { ignoreChainWithDepth: 2 }],
    'space-before-function-paren': ['error', 'never'],
    semi: ['error', 'never'],
    'global-require': ['off'],
    'no-console': ['warn', { allow: ['error'] }],
    'no-plusplus': ["error", { "allowForLoopAfterthoughts": true }],
    'no-restricted-syntax': [
      'error',
      'ForInStatement',
      'LabeledStatement',
      'WithStatement',
    ],
    'no-underscore-dangle': ['off'],
    'react/forbid-prop-types': ['error', { forbid: ['any', 'array'] }],
    'react/jsx-curly-spacing': ['error', 'always'],
    'react/require-default-props': ['off'],
    'react/jsx-space-before-closing': ['off'],
    'react/no-unescaped-entities': ['off'],
    'react/sort-comp': [
      'error',
      {
        order: [
          'static-methods',
          'lifecycle',
          '/^(get|set)(?!(InitialState$|DefaultProps$|ChildContext$)).+$/',
          '/^handle.+$/',
          'everything-else',
          '/^render.+$/',
          'render',
        ],
      },
    ],
    'unicorn/throw-new-error': ['error'],
    'unicorn/no-abusive-eslint-disable': ['error'],
    'unicorn/number-literal-case': ['error'],
    'unicorn/escape-case': ['error'],
    'unicorn/no-array-instanceof': ['error'],
    'unicorn/no-hex-escape': ['error'],
    'unicorn/prefer-starts-ends-with': ['error'],
    'unicorn/prefer-type-error': ['error'],
  },
}
